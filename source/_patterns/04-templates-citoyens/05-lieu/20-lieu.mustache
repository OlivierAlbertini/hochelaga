{{> styles-link-skip-to-main-content }}
{{> patterns-header-portal }}

<main class="main-content {{ pageClasses }}" id="main-content" aria-label="Main Content">

  {{# has-breadcrumb}}
  <div class="container-fluid container-fluid-max-xl">
    <div class="row">
      <div class="col-12">
      {{> components-breadcrumbs}}
      </div>
    </div>
  </div>
  {{/ has-breadcrumb}}

  {{> patterns-content-header-jumbotron }}

  <div class="region-content {{ regionMainClasses }}">
    <div class="container">
      <div class="row">

        {{# sidebarRight }}
        <aside class="col-12 col-lg-5 col-xl-4 order-lg-last" role="complementary">
          {{> patterns-sidebar-block-schedule }}
        </aside>
        {{/ sidebarRight }}

        <article class="col-12 col-lg-7 col-xl-8">
          <div class="content-block">
            <p class="lead">{{ lead }}</p>

            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras at convallis felis. Sed non purus ligula. Phasellus vulputate aliquam libero nec sollicitudin. 
            Integer vel egestas neque, eu faucibus tellus. Ut consequat tortor justo, blandit convallis ex malesuada vel. Ut dapibus enim pretium diam lacinia porttitor et a ante. 
            Maecenas a ligula at urna accumsan mollis. Quisque congue erat nec lacus dapibus, ut sodales mi finibus. Proin rhoncus nibh vel justo cursus pharetra.</p>
          </div>

          {{# commodites}}
          <div class="content-block">
            <h2 class="h5">Commodités</h2>
            {{# items}}
            <ul class="list-unstyled row">
              {{# item}}
              <li class="col-12 col-md-6">{{ text }}</li>
              {{/ item}}
            </ul>
            {{/ items}}
          </div>
          {{/ commodites}}

          {{# installations}}
          <div class="content-block">
            <h2 class="h5">Installations</h2>
            {{# items}}
            <div class="row">
              <div class="col-12 col-md-6 col-lg-12 col-xl-6">
                <div class="content-block-icon h-100">
                  {{# item-heading}}
                  <span class="content-block-icon-label">{{ item-heading }}</span>
                  {{/ item-heading}}
                  <ul class="mb-0">
                    {{# item}}
                    <li>{{ text }}</li>
                    {{/ item}}
                  </ul>
                </div>
              </div>
            </div>
            {{/ items}}
          </div>
          {{/ installations}}

          {{# accessibilite}}
          <div class="content-block">
            <h2 class="h5">Accessibilité</h2>
            {{# items}}
            <ul class="list-unstyled row">
              {{# item}}
              <li class="col-12 col-md-6">{{ text }}</li>
              {{/ item}}
            </ul>
            {{/ items}}
          </div>
          {{/ accessibilite}}

          {{# mode-paiement}}
          <div class="content-block">
            <h2 class="h5">Mode de paiement</h2>
            {{# items}}
            <ul class="list-unstyled row">
              {{# item}}
              <li class="col-12 col-md-6">{{ text }}</li>
              {{/ item}}
            </ul>
            {{/ items}}
          </div>
          {{/ mode-paiement}}

          {{# tc-references}}
          <div class="content-block">
            <h2 class="h5">Sujets et démarches</h2>
            {{# items }}
            <div class="hub-list-container">
              <ul class="hub-list">
                {{# item }}
                <li class="hub-list-item">
                  {{# link}}
                  <a href="{{ url }}">{{ title }}</a>
                  {{/ link}}
                  {{# description}}
                    {{{ description}}}
                  {{/ description}}
                </li>
                {{/ item}}
              </ul>
            </div>
            {{/ items}}
          </div>
          {{/ tc-references}}

          {{# events}}
          <div class="content-block">
            <h2 class="h5">Événements à venir</h2>
            {{> components-list-group-hub }}
            {{# button}}
            <div class="pagination-wrapper pt-0">
              {{> styles-button}}
            </div>
            {{/ button}}
          </div>
          {{/ events}}

          {{# has-tags}}
          <div class="content-block">
            <h2 class="h5">Thèmes associés</h2>
            <ul class="list-inline {{container-class}}">
              {{# tags}}
              <li class="list-inline-item">{{> styles-badge}}</li>
              {{/ tags}}
            </ul>
          </div>
          {{/ has-tags}}
        
        </article>

      </div>
      {{# map }}
      <div class="row">
        <div class="col-12">
          <h2 class="h5">{{ section-title }}</h2>
          <div class="map-section">
            <div id="{{ mapID }}" style="height:500px"></div>
          </div>
        </div>
      </div>
      {{/ map }}
    </div>
  </div>

  {{# hasLieux}}
  {{> patterns-page-section-cards}}
  {{/ hasLieux}}

  {{# hasFeedbackForm}}
  {{> patterns-feedback-form}}
  {{/ hasFeedbackForm }}
</main>

{{> patterns-footer-portal }}

<script>
    var pointLngLat = [{{{ map.lngLat }}}];
    var address = "{{{map.address}}}";
    var startZoom = 16;
    var center = pointLngLat;
    var maxBounds = [[-74.3965936,45.319517],[-73.442801,45.751651]];
    var marker = new mapboxgl.Marker(defaultMarker());
    var mapboxStyle = {
    version: 8,
    name: 'basic',
    sources: {
      'vector-tile-api': {
        type: 'vector',
        tiles: [`https://api.montreal.ca/api/it-platforms/geomatic/vector-tiles/maps/v1/basemap/{z}/{x}/{y}.pbf`]
      },
    },
    glyphs: '../../glyphs/{fontstack}/{range}.pbf',
    layers: [
      {
        id: 'background',
        type: 'background',
        paint: {
          'background-color': '#e7e5e0'
        }
      },
  
      {
        id: 'cities',
        type: 'fill',
        source: 'vector-tile-api',
        'source-layer': 'cities',
        filter: ['==', '$type', 'Polygon'],
        paint: {
          'fill-color': '#E6E4E0'
        }
      },
  
      {
        id: 'water',
        type: 'fill',
        source: 'vector-tile-api',
        'source-layer': 'water',
        filter: ['==', '$type', 'Polygon'],
        paint: {
          'fill-color': '#75cff0'
        }
      },
  
      {
        id: 'large_parks',
        type: 'fill',
        source: 'vector-tile-api',
        'source-layer': 'parks',
        filter: ['>=', 'SHAPE_AREA', 150000],
        paint: {
          'fill-color': '#B6E59E'
        }
      },
      {
        id: 'small_parks',
        type: 'fill',
        source: 'vector-tile-api',
        'source-layer': 'parks',
        filter: ['<', 'SHAPE_AREA', 150000],
        minzoom: 12,
        paint: {
          'fill-color': '#B6E59E'
        }
      },
      {
        id: 'lakes',
        type: 'fill',
        source: 'vector-tile-api',
        'source-layer': 'lakes',
        filter: ['==', '$type', 'Polygon'],
        paint: {
          'fill-color': '#75cff0'
        }
      },
      {
        id: 'streams',
        type: 'fill',
        source: 'vector-tile-api',
        'source-layer': 'streams',
        filter: ['==', '$type', 'Polygon'],
        paint: {
          'fill-color': '#75cff0'
        }
      },
      {
        id: 'canals',
        type: 'fill',
        source: 'vector-tile-api',
        'source-layer': 'canals',
        filter: ['==', '$type', 'Polygon'],
        paint: {
          'fill-color': '#75cff0'
        }
      },
      {
        id: 'roads_0',
        type: 'line',
        source: 'vector-tile-api',
        'source-layer': 'road-sections',
        minzoom: 14,
        layout: {
          'line-cap': 'round',
          'line-join': 'round'
        },
        paint: {
          'line-color': '#D6D9E6',
          'line-width': {
            base: 1.4,
            stops: [[10, 1.45], [14, 6], [18, 38]]
          }
        }
      },
      {
        id: 'arterial_network_0',
        type: 'line',
        source: 'vector-tile-api',
        'source-layer': 'road-sections',
        filter: ['any', ['==', 'classification', 6], ['==', 'classification', 7]],
        layout: {
          'line-cap': 'round',
          'line-join': 'round'
        },
        paint: {
          'line-color': '#DBDDE3',
          'line-width': {
            base: 1.2,
            stops: [[12, 1.45], [14, 5], [18, 38]]
          }
        }
      },
      {
        id: 'roads',
        type: 'line',
        source: 'vector-tile-api',
        'source-layer': 'road-sections',
        minzoom: 11,
        layout: {
          'line-cap': 'round',
          'line-join': 'round'
        },
        paint: {
          'line-color': '#F8F8F8',
          'line-width': {
            base: 1.55,
            stops: [[12, 1.35], [14, 5], [18, 35]]
          }
        }
      },
      {
        id: 'arterial network',
        type: 'line',
        source: 'vector-tile-api',
        'source-layer': 'road-sections',
        filter: ['any', ['==', 'classification', 6], ['==', 'classification', 7]],
        layout: {
          'line-cap': 'round',
          'line-join': 'round'
        },
        paint: {
          'line-color': '#F8F8F8',
          'line-width': {
            base: 1.4,
            stops: [[10, 1.25], [14, 3], [18, 35]]
          }
        }
      },
  
      {
        id: 'highways',
        type: 'line',
        source: 'vector-tile-api',
        'source-layer': 'road-sections',
        filter: ['==', 'classification', 8],
        layout: {
          'line-cap': 'round',
          'line-join': 'round'
        },
        paint: {
          'line-color': '#FFA35C',
          'line-width': {
            base: 1.4,
            stops: [[6, 0.5], [20, 30]]
          }
        }
      },
      {
        id: 'buildings',
        type: 'fill',
        source: 'vector-tile-api',
        'source-layer': 'buildings',
        minzoom: 13,
        paint: {
          'fill-color': ['interpolate', ['linear'], ['zoom'], 15, '#DCDCDC', 16, '#D3D3D3', 17, '#CECECE', 18, '#C3C3C3']
        }
      },
      
      {
        id: 'highways_labels',
        type: 'symbol',
        source: 'vector-tile-api',
        'source-layer': 'road-sections',
        filter: ['all', ['==', 'classification', 8], ['!=', 'name', 'voie Non-nommée'], ['!=', 'name', 'voie Privée']],
        layout: {
          'text-font': ['Open Sans SemiBold'],
          'text-transform': 'uppercase',
          'text-field': '{name}',
          'text-size': 10,
          'symbol-placement': 'line',
          'text-letter-spacing': 0.1
        },
        paint: {
          'text-color': '#666',
          'text-halo-color': 'rgba(255,255,255,0.75)',
          'text-halo-width': 2
        }
      },
      {
        id: 'roads_labels',
        type: 'symbol',
        source: 'vector-tile-api',
        'source-layer': 'road-sections',
        filter: ['all', ['!=', 'classification', 8], ['!=', 'name', 'voie Non-nommée'], ['!=', 'name', 'voie Privée']],
        minzoom: 14,
        layout: {
          'text-font': ['Open Sans Regular'],
          'text-field': '{name}',
          'text-size': 11,
          'symbol-placement': 'line',
          'text-letter-spacing': 0.1,
          'text-max-angle': 70
        },
        paint: {
          'text-color': '#787878',
          'text-halo-color': '#fff',
          'text-halo-width': 1,
          'text-halo-blur': 0.5
        }
      },
      {
        id: 'large_parks_labels',
        type: 'symbol',
        source: 'vector-tile-api',
        'source-layer': 'parks',
        filter: ['>=', 'SHAPE_AREA', 150000],
        minzoom: 12,
        layout: {
          'text-anchor': 'center',
          'text-font': ['Open Sans Regular'],
          'text-field': '{NOM_PARC}',
          'text-size': 11.5,
          'symbol-placement': 'point',
          'text-letter-spacing': 0.1,
          'text-padding': 60
        },
        paint: {
          'text-color': '#26660D',
          'text-halo-color': '#fff',
          'text-halo-width': 1,
          'text-halo-blur': 0.5
        }
      },
      {
        id: 'small_parks_labels',
        type: 'symbol',
        source: 'vector-tile-api',
        'source-layer': 'parks',
        filter: ['<', 'SHAPE_AREA', 150000],
        minzoom: 14.5,
        layout: {
          'text-anchor': 'center',
          'text-font': ['Open Sans Regular'],
          'text-field': '{NOM_PARC}',
          'text-size': 11.5,
          'symbol-placement': 'point',
          'text-letter-spacing': 0.1,
          'text-padding': 30
        },
        paint: {
          'text-color': '#26660D',
          'text-halo-color': '#fff',
          'text-halo-width': 1,
          'text-halo-blur': 0.5
        }
      },
  
      {
        id: 'boroughs_labels',
        type: 'symbol',
        source: 'vector-tile-api',
        'source-layer': 'boroughs-center',
        maxzoom: 14,
        layout: {
          'text-anchor': 'center',
          'text-font': ['Open Sans Light'],
          'text-field': '{NOM_ARROND}',
          'text-transform': 'uppercase',
          'symbol-placement': 'point',
          'text-letter-spacing': 0.1,
          'text-size': 9
        },
        paint: {
          'text-color': '#666',
          'text-halo-color': 'rgba(255,255,255,0.75)',
          'text-halo-width': 1,
          'text-halo-blur': 1
        }
      },
  
      {
        id: 'cities_labels',
        type: 'symbol',
        source: 'vector-tile-api',
        'source-layer': 'cities-center',
        filter: ['!=', 'NOM_VILLE', 'Montréal'],
        maxzoom: 14,
        'text-transform': 'uppercase',
        layout: {
          'text-anchor': 'center',
          'text-font': ['Open Sans SemiBold'],
          'text-field': '{NOM_VILLE}',
          'text-size': 10.5,
          'symbol-placement': 'point',
          'text-letter-spacing': 0.1
        },
        paint: {
          'text-color': '#666',
          'text-halo-color': 'rgba(255,255,255,0.75)',
          'text-halo-width': 1,
          'text-halo-blur': 1
        }
      }
    ]
  };
  mapboxgl.accessToken = 'undefined';
  var map = new mapboxgl.Map({
    container: '{{ map.mapID }}',
    zoom: startZoom,
    style: mapboxStyle,  
    center,
    maxBounds,
    interactive: false,
  });


  marker.setLngLat(pointLngLat).addTo(map);

  var markerHeight = 50, markerRadius = 10, linearOffset = 25;
  var popupOffsets = {
  'top': [0, 0],
  'top-left': [0,0],
  'top-right': [0,0],
  'bottom': [0, -markerHeight],
  'bottom-left': [linearOffset, (markerHeight - markerRadius + linearOffset) * -1],
  'bottom-right': [-linearOffset, (markerHeight - markerRadius + linearOffset) * -1],
  'left': [markerRadius, (markerHeight - markerRadius) * -1],
  'right': [-markerRadius, (markerHeight - markerRadius) * -1]
  };
  var popup = new mapboxgl.Popup({closeButton: false, closeOnClick: false, offset: popupOffsets, className: 'map-popup'})
    .setLngLat(pointLngLat)
    .setHTML("<address><strong>{{{text-elements.headings.display.content}}}</strong><br>{{{map.address}}}</address>")
    .addTo(map);

  function defaultMarker() {
    const el = document.createElement('div');
    el.className = 'marker';
    el.style.backgroundImage = "url('../../images/marker/marker.png')";
    el.style.width = '40px';
    el.style.height = '52px';

    return el;
  }

  </script>


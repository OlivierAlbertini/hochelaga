<form class="needs-validation" novalidate>
  <div class="form-row">
    <div class="col-md-4 mb-3">
      {{> components-input-text(
        "formGroupInputLabel": "Prénom",
        "formGroupInputID": "validationCustomPrenom",
        "formGroupInputPlaceholder": true,
        "formGroupInputPlaceholder.text": "Prénom",
        "formGroupInputRequired": true,
        "formGroupFeedbackIcon": true,
        "formGroupInputError": true,
        "formGroupInputError.text": "Veuillez saisir un prénom valide.")
      }}
    </div>
    <div class="col-md-4 mb-3">
      {{> components-input-text(
        "formGroupInputLabel": "Nom",
        "formGroupInputID": "validationCustomNom",
        "formGroupInputPlaceholder": true,
        "formGroupInputPlaceholder.text": "Nom",
        "formGroupInputRequired": true,
        "formGroupFeedbackIcon": true,
        "formGroupInputError": true,
        "formGroupInputError.text": "Veuillez saisir un nom valide.")
      }}
    </div>
    <div class="col-md-4 mb-3">
      {{> components-input-text(
        "formGroupInputLabel": "Username",
        "formGroupInputID": "validationCustomUsername",
        "formGroupInputPlaceholder": true,
        "formGroupInputPlaceholder.text": "Username",
        "formGroupInputRequired": true,
        "formGroupFeedbackIcon": true,
        "formGroupInputError": true,
        "formGroupInputError.text": "Veuillez saisir un username valide.")
      }}
    </div>
  </div>
  <div class="form-row">
    <div class="col-md-6 mb-3">
      {{> components-input-text(
        "formGroupInputLabel": "Ville",
        "formGroupInputID": "validationCustomVille",
        "formGroupInputPlaceholder": true,
        "formGroupInputPlaceholder.text": "Montréal",
        "formGroupInputRequired": true,
        "formGroupFeedbackIcon": true,
        "formGroupInputError": true,
        "formGroupInputError.text": "Veuillez saisir une ville valide.")
      }}
    </div>
    <div class="col-md-3 mb-3">
      {{> components-input-text(
        "formGroupInputLabel": "Province",
        "formGroupInputID": "validationCustomProvince",
        "formGroupInputPlaceholder": true,
        "formGroupInputPlaceholder.text": "Québec",
        "formGroupInputRequired": true,
        "formGroupFeedbackIcon": true,
        "formGroupInputError": true,
        "formGroupInputError.text": "Veuillez saisir une province valide.")
      }}
    </div>
    <div class="col-md-3 mb-3">
      {{> components-input-text(
        "formGroupInputLabel": "Code postal",
        "formGroupInputID": "validationCustomCodePostal",
        "formGroupInputPlaceholder": true,
        "formGroupInputPlaceholder.text": "H1X 1X0",
        "formGroupInputRequired": true,
        "formGroupFeedbackIcon": true,
        "formGroupInputError": true,
        "formGroupInputError.text": "Veuillez saisir un code postale valide.")
      }}
    </div>
  </div>
  <div class="form-group">
    <div class="custom-control custom-checkbox custom-control-card">
      <input type="checkbox" class="custom-control-input" id="confirmation-vld-chk-card01" value="confirmation-vld-chk-card01" required>
      <label class="custom-control-label" for="confirmation-vld-chk-card01">Agree to terms and conditions</label>
      <div class="invalid-feedback">
        You must agree before submitting.
      </div>
    </div>
  </div>

  <button class="btn btn-primary" type="submit">Submit form</button>
  
</form>

<script>
// Example starter JavaScript for disabling form submissions if there are invalid fields
(function() {
  'use strict';
  window.addEventListener('load', function() {
    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.getElementsByClassName('needs-validation');
    // Loop over them and prevent submission
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      }, false);
    });
  }, false);
})();
</script>
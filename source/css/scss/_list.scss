// List defines styled lists

// Base class
//
// Easily usable on <ul>, <ol>, or <div>.

.list,
.list-icon {
  display: flex;
  flex-direction: column;

  @include font-size($font-size-base);
  line-height: $line-height-md;

  // No need to set list-style: none; since .list-group-item is block level
  list-style: none;
  padding-left: 0; // reset padding because ul and ol
  margin-bottom: 0;
}

.list-lg {
  .list-item {
    padding: 1rem;
    .icon {
      margin-right: 1rem;
    }
    svg {
      margin-right: 1rem;
    }
  }
}


// Interactive list items
//
// Use anchor or button elements instead of `li`s or `div`s to create interactive
// list items. Includes an extra `.active` modifier class for selected items.

.list-item-action {
  width: 100%; // For `<button>`s (anchors become 100% by default though)
  border: none;
  color: $list-group-action-color;
  text-align: inherit; // For `<button>`s (anchors inherit)

  // Hover state
  @include hover-focus {
    z-index: 1; // Place hover/focus items above their siblings for proper border styling
    color: $list-group-action-hover-color;
    text-decoration: none;
    background-color: $list-group-hover-bg;
    border: none;

    svg {
      fill: currentColor;
    }
  }

  .icon {
    @include icon-color($action);
    align-self: center;
  }

  &:active {
    color: $list-group-action-active-color;
    background-color: $list-group-action-active-bg;
  }

}


// Individual list items
//
// Use on `li`s or `div`s within the `.list` parent.

.list-item {
  position: relative;
  display: flex;
  padding: .5rem 0;
  color: $list-group-color;

  &:last-child {
    margin-bottom: 0;
  }

  &.disabled,
  &:disabled {
    color: $list-group-disabled-color;
    pointer-events: none;
    background-color: $list-group-disabled-bg;
  }

  // Include both here for `<a>`s and `<button>`s
  &.active {
    z-index: 2; // Place active items above their siblings for proper border styling
    color: $list-group-active-color;
    background-color: $list-group-active-bg;
  }
  .icon {
    margin-right: .5rem;
  }
  svg {
    margin-right: .5rem;
    height: 1.5rem;
    width: 1.5rem;
    fill: currentColor;
    flex-shrink: 0;
  }

  &.list-item-description {
    .list-item-label {
      color: $neutral-primary;
      font-weight: $font-weight-bold;
    }
  }
}

.list-content {
  &.list-icon-content {
    margin-left: 2rem;
  }
}


// Individual list items with icon
.list-item-icon {
  padding: .5rem 0;
  display: flex;
  flex-flow: row wrap;
  .icon {
    margin-right: 1rem;
  }
  svg {
    margin-right: 1rem;
    fill: $neutral-tertiary;
  }

}
.list-item-icon-label {
  color: $neutral-primary;
  font-weight: $font-weight-bold;
}
.list-item-icon-action {
  display: inherit;
  width: 100%;
  .link-has-icon {
    display: inline-flex;
    border: none;
    line-height: $line-height-md;
    .icon {
      @include icon-color($action);
      display: block;
      margin: 0;
      padding: 0;
      margin-right: 1rem;
    }
    @include hover-focus {
      border: none;
      background-color: transparent;
      .link-icon-label {
        background-color: $highlight-light;
        display: inline;
        border-bottom: 1px solid $action;
      }
      .icon {
        border: none;
        background-color: transparent;
      }
    }
  }
}
.list-item-icon-content {
  flex: 2;
  p {
    margin-bottom: 1rem;
    + p {
      margin-top: 0;
    }
    &:last-child {
      margin-bottom: 0;
    }
  }
}

.list-item-icon-sub-content {
  position: relative;
  &:before {
    content: "";
    background: $neutral-stroke;
    position: absolute;
    left: -1.75rem;
    top: 0;
    height: 100%;
    width: 2px;
  }
  > * {
    margin-bottom: .5rem;
    &:last-child {
      margin-bottom: 0;
    }
  }
}

// DEPRECATED
// USE new .list-inline-interpunct
.list-inline-dot {
  margin-top: .375rem;
  .list-inline-item {
    display: inline-flex;
    margin-right: 0;
    margin-bottom: .375rem;
    a {
      display: inline-block;
    }
    &:after {
      -webkit-mask: url($data-icon-dot-interpunct) no-repeat 50% 50%;
      mask: url($data-icon-dot-interpunct) no-repeat 50% 50%;
      width: 20px;
      height: 20px;
      content: '';
      display: inline-flex;
      -webkit-mask-size: cover;
      mask-size: cover;
      background-color: $neutral-tertiary;
    }

    + .list-inline-item {
      margin-left: -.25rem;
    }

    &:last-child {
      &:after {
        content: none;
      }
    }
  }
}

// Use for list-inline or any content that needs to be listed with interpunct
//
.list-inline-interpunct {
  display: flex;
  flex-wrap: wrap;
  .list-inline-item {
    display: inline-flex;
    margin-right: 0;
    margin-bottom: .25rem;
    &:after {
      -webkit-mask: url($data-icon-dot-interpunct) no-repeat 50% 50%;
      mask: url($data-icon-dot-interpunct) no-repeat 50% 50%;
      width: $icon-sm;
      height: $icon-sm;
      content: '';
      display: inline-flex;
      -webkit-mask-size: cover;
      mask-size: cover;
      background-color: $neutral-tertiary;
      margin-left: .25rem;
      margin-right: .25rem;
    }
    // Remove interpunct from last item
    &:last-child {
      &:after {
        content: none;
      }
    }

    a {
      display: inline-block;
    }

  }
}


// DEPRECATED - USE column-count utilities
// 2 columns list layout
//
.list-2-columns {
  @include media-breakpoint-up(lg) {
    -moz-column-count: 2;
    -moz-column-gap: $grid-gutter-width;
    -webkit-column-count: 2;
    -webkit-column-gap: $grid-gutter-width;
    column-count: 2;
    column-gap: $grid-gutter-width;
    > * {
      // Prevent element inside column from breaking
      -webkit-column-break-inside: avoid; /* Chrome, Safari, Opera */
      page-break-inside: avoid; /* Firefox */
      break-inside: avoid; /* IE 10+ */
      transform: translateZ(0); // Issues with box-shadow focus
    }
  }
}

// DEPRECATED - USE column-count utilities
// 4 columns list layout
//
.list-4-columns-md {
  @include media-breakpoint-up(md) {
    -moz-column-count: 4;
    -moz-column-gap: $grid-gutter-width;
    -webkit-column-count: 4;
    -webkit-column-gap: $grid-gutter-width;
    column-count: 4;
    column-gap: $grid-gutter-width;
    > * {
      // Prevent element inside column from breaking
      -webkit-column-break-inside: avoid; /* Chrome, Safari, Opera */
      page-break-inside: avoid; /* Firefox */
      break-inside: avoid; /* IE 10+ */
      transform: translateZ(0); // Fix issues with box-shadow focus
    }
  }
}


// Quick links lists
//
.quick-links {
  @include font-size($font-size-sm);
  line-height: $line-height-sm;
  margin-bottom: .5rem;
  .quick-links-label {
    color: $neutral-primary;
    display: inline-block;
    font-weight: $font-weight-normal;
    margin-right: .5rem;
    margin-bottom: .5rem;
  }
  .list-inline {
    display: inline;
  }
  .list-inline-item {
    margin-right: .5rem;
    margin-bottom: .5rem;
  }
}
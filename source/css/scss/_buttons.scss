// This stylesheet completely replace bootstrap _buttons.scss

//
// Base styles
//

button {
  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }
}

.btn {
  display: inline-flex;
  align-items: center;
  font-weight: $btn-font-weight;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  // Share hover and focus styles
  @include hover-focus {
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    @include box-shadow(none);
    cursor: not-allowed;
  }

  // Opinionated: add "hand" cursor to non-disabled .btn elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    background-image: none;

    &:focus {
      box-shadow: $btn-focus-box-shadow;
    }
  }

  // Icons
  .icon {
    @include icon-color($white);
    margin-left: -1.125rem;
    margin-right: .5rem;
    &:before {
      @include transition($btn-transition);
    }
  }
  .utility-icon {
    width: 24px;
    height: 24px;
    margin-left: -.5rem;
    margin-right: .5rem;
    path {
      fill: $white;
    }
  }

  // Spinner
  .spinner-border {
    margin-left: -.5rem;
    margin-right: .5rem;
    @extend .spinner-border-sm;
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}


// Primary, secondary, promo
.btn-primary {
  @include button-variant($background: $action, $border: $action, $color: $white);
}

.btn-secondary {
  @include button-variant($background: transparent, $border: $neutral-stroke, $color: $action, $hover-background: transparent, $hover-border: $action, $hover-color: $action, $active-background: transparent, $active-border: $action, $active-color: $action);
}

.btn-link,
.btn-tertiary {
  @include button-variant($background: transparent, $border: transparent, $color: $action, $hover-background: $neutral-underground-1, $hover-border: $neutral-underground-1, $hover-color: $action, $active-background: $neutral-underground-1, $active-border: $neutral-underground-1, $active-color: $action);

  &.btn-collapse {
    &:after {
      content: '';
      -webkit-mask: url($data-icon-chevron-up) no-repeat 50% 50%;
      mask: url($data-icon-chevron-up) no-repeat 50% 50%;
      -webkit-mask-size: cover;
      mask-size: cover;
      background-color: $primary;
      width: 24px;
      height: 24px;
    }
    &.collapsed:after {
      content: '';
      -webkit-mask: url($data-icon-chevron-down) no-repeat 50% 50%;
      mask: url($data-icon-chevron-down) no-repeat 50% 50%;
      -webkit-mask-size: cover;
      mask-size: cover;
      background-color: $primary;
      width: 24px;
      height: 24px;
    }
  }
}

// Dialog Color Modifier
@each $label, $map in $dialog-colors {
  $color-dark: map-get($map, dark);
  $color-base: map-get($map, base);
  $color-light: map-get($map, light);
  $color-dark-lighten: lighten($color-dark, 10%);
  .btn-#{$label} {
    // Primary
    &.btn-primary {
      @include button-variant($background: $color-dark, $border: $color-dark, $hover-background: $color-dark-lighten, $hover-border: $color-dark-lighten, $active-background: $color-dark-lighten, $active-border: $color-dark-lighten);
    }
    // Secondary
    &.btn-secondary {
      @include button-variant($background: transparent, $border: $neutral-stroke, $color: $color-dark, $hover-background: transparent, $hover-border: $color-dark, $hover-color: $color-dark, $active-background: transparent, $active-border: $color-dark, $active-color: $color-dark);
    }
    // Tertiary
    &.btn-tertiary,
    &.btn-link {
      @include button-variant($background: transparent, $border: transparent, $color: $color-dark, $hover-background: $color-light, $hover-border: $color-light, $hover-color: $color-dark, $active-background: $color-light, $active-border: $color-light, $active-color: $color-dark);
    }
  }

}

// DEPRECATED
// USE .btn-reversed modifier
.btn-primary-reverse {
  @include button-variant($background: $white, $border: $white, $color: $neutral-primary, $hover-background: $white, $hover-border: $white, $hover-color: $neutral-primary, $active-background: $white, $active-border: $white, $active-color: $neutral-primary);
  &:focus,
  &.focus {
    box-shadow: $input-btn-reverse-focus-box-shadow;
  }
}

.btn-secondary-reverse {
  @include button-variant($background: transparent, $border: $overlay-mid-reversed, $color: $white, $hover-background: transparent, $hover-border: $white, $hover-color: $white, $active-background: transparent, $active-border: $white, $active-color: $white);
  &:focus,
  &.focus {
    box-shadow: $input-btn-reverse-focus-box-shadow;
  }
}

.btn-link-reverse,
.btn-tertiary-reverse {
  @include button-variant($background: transparent, $border: transparent, $color: $white, $hover-background: $overlay-light-reversed, $hover-border: transparent, $hover-color: $white, $active-background: $overlay-light-reversed, $active-border: transparent, $active-color: $white);
  &:focus,
  &.focus {
    box-shadow: $input-btn-reverse-focus-box-shadow;
  }
}

// Reversed modifier
.btn-reversed {
  &:focus,
  &.focus {
    box-shadow: $input-btn-reverse-focus-box-shadow;
  }
  &.btn-primary {
    @include button-variant($background: $white, $border: $white, $color: $neutral-primary, $hover-background: $white, $hover-border: $white, $hover-color: $action, $active-background: $white, $active-border: $white, $active-color: $action);
  }
  &.btn-secondary {
    @include button-variant($background: transparent, $border: $overlay-mid-reversed, $color: $white, $hover-background: transparent, $hover-border: $white, $hover-color: $white, $active-background: transparent, $active-border: $white, $active-color: $white);
  }
  &.btn-link,
  &.btn-tertiary {
    @include button-variant($background: transparent, $border: transparent, $color: $white, $hover-background: $overlay-light-reversed, $hover-border: transparent, $hover-color: $white, $active-background: $overlay-light-reversed, $active-border: transparent, $active-color: $white);
  }
}

// Disabled states by hierarchy
:disabled,
.disabled {
  // Primary
  &.btn-primary {
    @include button-variant($background: $neutral-underground-2, $border: $neutral-underground-2, $color: $neutral-secondary, $hover-background: $neutral-underground-2, $hover-border: $neutral-underground-2, $hover-color: $neutral-secondary, $active-background: $neutral-underground-2, $active-border: $neutral-underground-2, $active-color: $neutral-secondary);
  }
  // Secondary
  &.btn-secondary {
    @include button-variant($background: transparent, $border: $neutral-stroke, $color: $neutral-tertiary, $hover-background: transparent, $hover-border: $neutral-stroke, $hover-color: $neutral-tertiary, $active-background: transparent, $active-border: $neutral-stroke, $active-color: $neutral-tertiary);
  }
  // Tertiary
  &.btn-link,
  &.btn-tertiary {
    @include button-variant($background: transparent, $border: transparent, $color: $neutral-tertiary, $hover-background: transparent, $hover-border: transparent, $hover-color: $neutral-tertiary, $active-background: transparent, $active-border: transparent, $active-color: $neutral-tertiary);
  }

  // Reversed
  &.btn-reversed {
    &.btn-primary {
      @include button-variant($background: $overlay-light-reversed, $border: transparent, $color: $overlay-mid-reversed, $hover-background: $overlay-light-reversed, $hover-border: transparent, $hover-color: $overlay-mid-reversed, $active-background: $overlay-light-reversed, $active-border: transparent, $active-color: $overlay-mid-reversed);
    }
    &.btn-secondary {
      @include button-variant($background: transparent, $border: $overlay-mid-reversed, $color: $overlay-mid-reversed, $hover-background: transparent, $hover-border: $overlay-mid-reversed, $hover-color: $overlay-mid-reversed, $active-background: transparent, $active-border: $overlay-mid-reversed, $active-color: $overlay-mid-reversed);
    }
    &.btn-link,
    &.btn-tertiary {
      @include button-variant($background: transparent, $border: transparent, $color: $overlay-mid-reversed, $hover-background: transparent, $hover-border: transparent, $hover-color: $overlay-mid-reversed, $active-background: transparent, $active-border: transparent, $active-color: $overlay-mid-reversed);
    }

    // We need to override btn-icon inside .btn-reversed
    // See if we can simplify the whole think
    &.btn-icon {
      .icon {
        margin: 0;
      }
    }
  }

}


.btn-lang {
  @include button-variant($background: transparent, $border: transparent, $color: $white, $hover-background: transparent, $hover-border: transparent, $hover-color: $action-lighter, $active-background: transparent, $active-border: transparent, $active-color: $action-lighter);
  @extend .btn-squared;
  border: none;
  padding-left: 0;
  padding-right: 0;
  padding-top: .375rem;
  padding-bottom: .375rem;
  @include hover-focus {
    border: none;
  }
  &:focus,
  &.focus {
    box-shadow: $input-btn-reverse-focus-box-shadow;
  }
}

// DEPRECATED
.btn-promo {
  @include button-variant($background: $brand, $border: $brand, $color: $white, $hover-background: $brand-dark, $hover-border: $brand-dark, $hover-color: $white, $active-background: $brand-dark, $active-border: $brand-dark, $active-color: $white);
  &:focus,
  .focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($brand, .5);
  }
}


// Button Large variant
.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-line-height-lg, $btn-border-radius);
  .icon {
    margin-left: -.75rem;
  }
}


// Button Small variant
.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-line-height-sm, $btn-border-radius);
  .icon,
  .utility-icon {
    margin-left: -.25rem;
    width: 16px;
    height: 16px;
    &:before {
      width: 16px;
      height: 16px;
    }
  }
}

// Button squared modifier
// Must comes after sizes variant to override border-radius
.btn-squared {
  border-radius: $btn-border-radius-squared;
  padding-left: 1rem;
  padding-right: 1rem; 
  .icon,
  .utility-icon {
    margin-left: -.5rem;
  }
}

// Block button modifier
.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

// Make the div behave like a button
.btn-group-sm,
.btn-group-vertical-sm {
  // Prevent double borders when buttons are next to each other
  .btn + .btn,
  .btn + .btn-group,
  .btn-group + .btn,
  .btn-group + .btn-group {
    margin-left: -1px;
  }
}

// Button close
.btn-unstyled {
  @include button-reset();
  pointer-events: inherit;
  cursor: pointer;
}


// Icons left / right

.btn-icon-left,
.btn-icon-right {
  display: inline-flex;
  align-items: center;
  .icon {
    align-self: center;
    &:before {
      display: block;
    }
  }
}

.btn-icon-left {
  .btn-label {
    order: 2;
  }
  .icon {
    order: 1;
    margin-left: -1.125rem;
    margin-right: .5rem;
    &:before {
      left: ($spacer/4);
    }
  }
  &.btn-lg {
    .icon {
      margin-left: -.75rem;
    }
  }
  &.btn-sm {
    .icon {
      margin-left: -.375rem;
    }
  }
  &.btn-squared {
    .icon {
      margin-left: -.5rem;
    }
    &.btn-lg {
      padding-right: 1.5rem;
      .icon {
        margin-left: 0;
      }
    }
    &.btn-sm {
      padding-left: .875rem;
      padding-right: .875rem;
    }
  }
}

.btn-icon-right {
  .btn-label {
    order: 1;
  }
  .icon {
    order: 2;
    margin-right: -1.125rem;
    margin-left: .5rem;
    &:before {
      right: ($spacer/4);
    }
  }
  &.btn-lg {
    .icon {
      margin-right: -.75rem;
    }
  }
  &.btn-sm {
    .icon {
      margin-right: -.375rem;
    }
  }
  &.btn-squared {
    .icon {
      margin-right: -.5rem;
    }
    &.btn-lg {
      padding-left: 1.5rem;
      .icon {
        margin-right: 0;
      }
    }
    &.btn-sm {
      padding-left: .875rem;
      padding-right: .875rem;
    }
  }
}


// Button with icon only
//
.btn-icon {
  // reset margin on icon
  &.btn-primary .icon,
  &.btn-secondary .icon,
  &.btn-tertiary .icon,
  &.btn-link .icon,
  .icon {
    margin: 0;
  }
  // Handle padding on button sizes
  &.btn {
    padding: .4375rem;
  }
  &.btn-lg {
    padding: .9375rem;
  }
  &.btn-sm {
    padding: .4375rem;
  }
}


// Utility class to hide button-icon label
@each $breakpoint, $value in $grid-breakpoints {
  // Hide button label at small breakpoint
  .btn-hide-label-#{$breakpoint} {
    @include media-breakpoint-down($breakpoint) {

      .btn-label {
        display: none;
      }

      // Default
      &.btn-icon-left,
      &.btn-icon-right {
        padding: .4375rem;
        .icon {
         margin: 0;
        }
      }
      &.btn-lg {
        &.btn-icon-left,
        &.btn-icon-right {
          padding: .9375rem;
          .icon {
           margin: 0;
          }
        }
      }
      &.btn-sm {
        &.btn-icon-left,
        &.btn-icon-right {
          padding: .4375rem;
          .icon {
           margin: 0;
          }
        }
      }
    }
  }
}


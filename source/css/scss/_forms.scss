// FORMS
input, label {
  position: relative;
}

textarea {
  min-height: 80px;
}

label {
  font-size: $font-size-sm;
  line-height: $line-height-sm;
  font-weight: $font-weight-bold;
  color: $neutral-primary;
  margin-bottom: .5rem;
  span {
    @include font-size($font-size-xs);
    font-weight: $font-weight-normal;
    margin-left: .5rem;
    color: $neutral-secondary;
  }
  &.label-sm {
    @include font-size($font-size-xs);
    line-height: $line-height-xs;
  }
  &.label-lg {
    @include font-size($font-size-base);
    line-height: $line-height-md;
  }
}


legend,
.group-label {
  @extend legend;
  color: $headings-color;
  font-weight: $font-weight-bold;
  line-height: $line-height-sm;
  margin-bottom: 1rem;
}


.form-control {
  &:disabled,
  &[readonly] {
    &::placeholder {
     color: $neutral-secondary;
    }
  }
}
.valid-feedback,
.invalid-feedback {
  font-weight: $font-weight-bold;
  line-height: $line-height-xs;
  font-size: $font-size-xs;
  margin-top: .5rem;
  color: $neutral-primary;

  // DEPRECATED
  // We now conform to bootstrap validation
  &.feedback-icon {
    display: none;
  }
}

.form-group {
  position: relative;
  small {
    color: $neutral-secondary;
    line-height: $line-height-xs;
  }
  .input-rounded {
    border-radius: 1.4em;
    padding: $btn-padding-y $btn-padding-x-sm;
  }

}

.form-text {
  margin-top: .5rem;
}

.input-group-icon {
  position: relative;
  width: 100%;

  input {
    &:not([type]),
    &[type="text"],
    &[type="email"],
    &[type="password"],
    &[type="search"],
    &[type="tel"],
    &[type="url"] {
      & + .icon {
        color: $neutral-primary;
        display: flex;
        align-items: center;
        height: 100%; // Needed to center icon inside input
        padding: 0 0.5rem;
        pointer-events: none;
        position: absolute;
        top: 0;
      }
    }
  }


  &.input-group-icon-left {
    input {
      &:not([type]),
      &[type="text"],
      &[type="email"],
      &[type="password"],
      &[type="search"],
      &[type="tel"],
      &[type="url"] {
        padding-left: 2.5rem;
        & + .icon {
          left: 0;
        }
      }
    }
  }

  &.input-group-icon-right {
    input {
      &:not([type]),
      &[type="text"],
      &[type="email"],
      &[type="password"],
      &[type="search"],
      &[type="tel"],
      &[type="url"] {
        padding-right: 2.5rem;
        & + .icon {
          right: 0;
        }
      }
    }
  }
}

// Input Groups
//
.input-group-date {
  .input-group-append {
    cursor: pointer;
  }
}


.has-clear {
  .form-control {
    padding-right: 2.5rem;
  }
  .btn-clear {
    @include button-reset();
    pointer-events: inherit;
    cursor: pointer;
    @include font-size(1.5rem);
    z-index: 10;
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
    display: flex;
    color: $neutral-primary;
    margin-right: .3rem;
    padding: 0;
    border-radius: 50%;
  }
}


// Custom control indicators
//
// Build the custom controls out of pseudo-elements.
// Radios
//
// Tweak just a few things for radios.
.custom-control {
  line-height: $line-height-md;
  min-height: $line-height-md;
  padding-top: .5rem;
  padding-bottom: .5rem;

  .custom-control-input:checked ~ .custom-control-label {
    &::before {
      border-color: $custom-control-indicator-checked-bg;
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      border-color: $custom-control-indicator-checked-disabled-bg;
    }
    &:indeterminate ~ .custom-control-label::before {
      border-color: $custom-control-indicator-checked-disabled-bg;
    }
  }
}

// Custom control indicators
//
// Build the custom controls out of pseudo-elements.

.custom-control-label {
  @include font-size($font-size-base);
  line-height: $line-height-md;
  font-weight: $font-weight-normal; // custom-control-label should not be bold
  position: relative;
  margin-bottom: 0;
  vertical-align: top;

  // Background-color and (when enabled) gradient
  &::before {
    position: absolute;
    top: 0;
    left: -($custom-control-gutter + $custom-control-indicator-size);
    display: block;
    margin: .125rem;
    width: $custom-control-indicator-size;
    height: $custom-control-indicator-size;
    pointer-events: none;
    content: "";
    background-color: $custom-control-indicator-bg;
    border: $custom-control-indicator-border-color solid $custom-control-indicator-border-width;
    @include box-shadow($custom-control-indicator-box-shadow);
  }

  // Foreground (icon)
  &::after {
    position: absolute;
    top: 0;
    left: -($custom-control-gutter + $custom-control-indicator-size);
    display: block;
    margin: 0;
    width: $custom-checkbox-indicator-icon-checked-size;
    height: $custom-checkbox-indicator-icon-checked-size;
    content: "";
    background: no-repeat 50% / #{$custom-checkbox-indicator-icon-checked-size};
  }
}

.custom-control-input {
  position: absolute;
  z-index: -1; // Put the input behind the label so it doesn't overlay text
  opacity: 0;

  &:disabled {
    ~ .custom-control-label {
      &::before {
        border-color: $custom-control-indicator-disabled-bg;
      }
    }
  }
}

// switches
//
// Tweak a few things for switches
.custom-switch {
  padding-left: $custom-switch-width + $custom-control-gutter;

  .custom-control-label {
    &::before {
      top: calc(#{($line-height-md - .75rem) / 2});
      left: -($custom-switch-width + $custom-control-gutter);
      width: 2rem;
      height: .75rem;
      margin: 0 .25rem;
      background-color: $custom-switch-indicator-bg;
      border: none;
      border-radius: $custom-switch-indicator-border-radius;
    }

    &::after {
      top: calc(#{($line-height-md - $custom-control-indicator-size) / 2});
      left: -($custom-switch-width + $custom-control-gutter);
      width: $custom-switch-indicator-size;
      height: $custom-switch-indicator-size;
      margin: 0;
      background-color: $custom-switch-indicator-handle;
      border-radius: 50%;
      box-shadow: 0 1px 4px 0 $overlay-subtle;
      @include transition(transform .15s ease-in-out, $custom-forms-transition);

    }
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::before {
      background-color: $custom-switch-indicator-checked-bg;
    }
    &::after {
      background-color: $custom-switch-indicator-checked-handle;
    }
  }

  .custom-control-input:disabled {
    ~ .custom-control-label::before {
      cursor: not-allowed;
    }
    // Inactive disabled state
    ~ .custom-control-label::after {
      background-color: $custom-switch-indicator-handle-disabled;
      cursor: not-allowed;
    }
    // Active disabled background
    &:checked ~ .custom-control-label::before {
      background-color: $custom-switch-indicator-checked-bg;
      cursor: not-allowed;
    }
    // Active disabled handle state
    &:checked ~ .custom-control-label::after {
      background-color: $custom-switch-indicator-checked-handle-disabled;
      cursor: not-allowed;
    }
  }

}


// Form group sizes overrides
//
.form-group-sm,
.form-group-lg {
  margin-bottom: $form-group-margin-bottom;
}


// Form group sm
//
.form-group-sm {
  label {
    @include font-size($font-size-xs);
    line-height: $line-height-xs;
  }

  .input-rounded {
    border-radius: 1rem;
    padding: $btn-padding-y-sm $btn-padding-x-sm;
  }

  .input-group-icon {
    input {
      &:not([type]),
      &[type="text"],
      &[type="email"],
      &[type="password"],
      &[type="search"],
      &[type="tel"],
      &[type="url"] {
        & + .icon {
          padding: 0 .5rem;
          &:before{
            width: 16px;
            height: 16px;
          }
        }
      }
    }

    &.input-group-icon-left {
      input {
        &:not([type]),
        &[type="text"],
        &[type="email"],
        &[type="password"],
        &[type="search"],
        &[type="tel"],
        &[type="url"] {
          padding-left: 2rem;
        }
      }
    }

    &.input-group-icon-right {
      input {
        &:not([type]),
        &[type="text"],
        &[type="email"],
        &[type="password"],
        &[type="search"],
        &[type="tel"],
        &[type="url"] {
          padding-right: 2rem;
        }
      }
    }
  }
  .valid-feedback,
  .invalid-feedback {
    &:before {
      width: 16px;
      height: 16px;
      top: calc(24px + 16px); //(height .invalid-feedback + haft of icon)+ (height of input/2)
    }
  }
  .form-control {
    @extend .form-control-sm;
    overflow: auto;
  }

  textarea.form-control {
    height: auto;
  }

  .custom-control {
    line-height: $line-height-xs;
  }

  .custom-control-label {
    @include font-size($font-size-xs);
    line-height: $line-height-xs;

    // Background-color and (when enabled) gradient
    &::before {
      top: -.25rem;
    }

    // Foreground (icon)
    &::after {
      top: -.25rem;
    }
  }

  .custom-switch {
    .custom-control-label {
      &::before {
        top: calc(#{($line-height-xs - .75rem) / 2});
      }

      &::after {
        top: calc(#{($line-height-xs - $custom-control-indicator-size) / 2});
      }
    }
  }

  .btn {
    @extend .btn-sm;
  }

  .file-drop-container {
    .help-text {
      font-size: $font-size-xs;
    }
  }

}


// Form group lg
//
.form-group-lg {
  label {
    @include font-size($font-size-base);
    line-height: $line-height-md;
  }
  .input-rounded {
      border-radius: 1.75rem;
      padding: $btn-padding-y-lg $btn-padding-x-lg;
    }

  .input-group-icon {
    input {
      &:not([type]),
      &[type="text"],
      &[type="email"],
      &[type="password"],
      &[type="search"],
      &[type="tel"],
      &[type="url"] {
        & + .icon {
          padding: 0 1rem;
        }
      }
    }

    &.input-group-icon-left {
      input {
        &:not([type]),
        &[type="text"],
        &[type="email"],
        &[type="password"],
        &[type="search"],
        &[type="tel"],
        &[type="url"] {
          padding-left: 3.5rem;
        }
      }
    }

    &.input-group-icon-right {
      input {
        &:not([type]),
        &[type="text"],
        &[type="email"],
        &[type="password"],
        &[type="search"],
        &[type="tel"],
        &[type="url"] {
          padding-right: 3.5rem;
        }
      }
    }

  }

  .valid-feedback,
  .invalid-feedback {
    &:before {
      top: calc(21px + 28px); //(height .invalid-feedback + haft of icon)+ (height of input/2)
    }
  }

  .form-control {
    @extend .form-control-lg;
  }

  textarea.form-control {
    height: auto;
  }

  .custom-control {
    padding-top: 1rem;
    padding-bottom: 1rem;
  }

  .custom-control-label {
    @include font-size($font-size-base);
    line-height: $line-height-md;
  }

  .custom-control-inline {
    margin-right: 1.5rem;
  }

  .btn {
    @extend .btn-lg;
  }

  .file-drop-container {
    .help-text {
      font-size: $font-size-base;
    }
  }
}

.form-sm {
  @extend .form-group-sm;
}

.form-lg {
  @extend .form-group-lg;
}


// file drop container
// Deprecated - Use file-drop-container-v2
//
.file-drop-container {
  border-radius: $input-border-radius;
  border: dashed 2px $neutral-stroke;
  display: flex;
  padding: 2rem;
  flex-direction: column;
  align-items: center;

  .help-text {
    color: $input-color;
    margin-bottom: 1rem;
    text-align: center;
    font-size: $font-size-sm;
    line-height: $line-height-sm;
  }

  &.file-over {
    background: $neutral-stroke;
  }

  .file-selector-button {
    input:focus {
      ~ .btn-secondary {
        border-color: $action;
        box-shadow: $btn-focus-box-shadow;
      }
    }
  }
}

.file-drop-container-v2 {
  border-radius: $input-border-radius;
  border: 1px dashed $neutral-stroke;
  display: flex;
  padding: calc(0.25rem - #{$input-border-width});
  align-items: center;

  label {
    margin-bottom: 0;
  }

  .help-text {
    color: $neutral-secondary;
    font-size: $font-size-sm;
    line-height: $line-height-sm;
    margin-left: .5rem;
    text-align: center;
  }
  &.active,
  &.file-over {
    background: $highlight-light;
    border-color: $action;

    .btn {
      border-color: $action;
    }
  }

  .file-selector-button {
    input:focus {
      ~ .btn-secondary {
        border-color: $action;
        box-shadow: $btn-focus-box-shadow;
      }
    }
  }
}

// Feedback form
//
.feedback-form-container.alert {
  padding: 2rem;
  display: block;
  box-shadow: none;
  margin-bottom: 2rem;
  @include font-size($font-size-base);
  line-height: $line-height-lg;

  @include media-breakpoint-up(lg) {
    margin-bottom: 4rem;
  }
}

.feedback-form {
  textarea {
    transform: translateZ(0px);
  }

  .btn {
    + .btn {
      margin-left: .5rem;
    }
  }

  // All this will be deprecated in v4.4.0
  .feedback-question {
    h4 {
      margin-bottom: 1.5rem;
    }
  }
  .feedback-question-label {
    @include font-size($font-size-lg);
    color: $headings-color;
    display: block;
    line-height: $line-height-sm;
    margin-bottom: 1.5rem;
  }

  .feedback-details-content,
  .feedback-details-display {
    display: none;
  }

}


// wrapper around input that needs inline text addon
.input-inline-addon {
  @extend .form-inline;
  // Allow folks to *not* use `.form-group`
  .form-control {
    display: inline-block;
    width: 160px;
    vertical-align: middle;
  }
  .input-inline-text {
    color: $neutral-tertiary;
    padding-left: 0.8125rem;
  }
}

// TO DO: Is this generic or specific to wizard forms
.form-action-group {
  margin: 2rem auto;
  ul {
    @extend .list-inline;
    display: flex;
    //justify-content: space-between;
    li {
      @extend .list-inline-item;
      &:not(:last-child) {
        margin-right: inherit;
      }

      &:last-child {
        margin-left: auto;
      }
    }
  }
}


// Fix pour les select dans firefox
@-moz-document url-prefix() {
  .form-group {
    select {
      padding-top: 0;
      padding-bottom: 0;
    }
  }
}


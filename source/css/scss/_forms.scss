// FORMS
input, label {
  position: relative;
}

textarea {
  min-height: 80px;
}

label {
  font-size: $font-size-sm;
  line-height: $line-height-sm;
  span {
    @include font-size($font-size-xs);
    margin-left: ($spacer/2);
    color: $gray-700;
  }
  &.label-sm {
    @include font-size($font-size-xs);
    span {
      font-size: 0.625rem;
    }
  }
  &.label-lg {
    @include font-size($font-size-base);
    span {
      font-size: $font-size-sm;
    }
  }
}


legend,
.group-label {
  @extend legend;
  color: $headings-color;
  font-weight: $font-weight-bold;
  line-height: $line-height-sm;
  margin-bottom: 1rem;
}


.form-control {
  &:disabled,
  &[readonly] {
    &::placeholder {
     color: $gray-700;
    }
  }
}

.valid-feedback,
.invalid-feedback {
  font-weight: $font-weight-bold;
  line-height: 1rem;
  font-size: $font-size-xs;
  margin-top: 0.25rem;
  color: $gray-900;
  &:before {
    width: 24px;
    height: 24px;
    content: '';
    display: block;
    -webkit-mask-size: cover;
    mask-size: cover;
    position: absolute;
    top: calc(21px + 20px); //(height .invalid-feedback + haft of icon)+ (height of input/2)
    right: 1.5rem;
  }
}
.valid-feedback {
  &:before {
    -webkit-mask: url($data-icon-check-circle) no-repeat 50% 50%;
    mask: url($data-icon-check-circle) no-repeat 50% 50%;
    background-color: $positive-dark;
  }
}

.invalid-feedback {
  &:before {
    -webkit-mask: url($data-icon-warning) no-repeat 50% 50%;
    mask: url($data-icon-warning) no-repeat 50% 50%;
    background-color: $negative-dark;
  }
}

.is-invalid,
.is-valid {
  position:relative;
}

.form-group {
  margin-bottom: 2rem;
  
  small {
    color: $gray-700;
    line-height: 1rem;
  }
  .input-rounded {
    border-radius: 1.4em;
    padding: $btn-padding-y $btn-padding-x-sm;
  }

}

.input-group-icon {
  position: relative;
  width: 100%;

  > .icon {
    color: $gray-900;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    @include font-size(2rem);
    height: 100%;
    padding: 0 0.5rem;
    pointer-events: none;
    position: absolute;
    top: 0;
  }

  &.input-group-icon-left {
    > .icon {
      left: 0;
    }
    input {
      padding-left: 2.5rem;
    }
  }
  &.input-group-icon-right {
    > .icon {
      right: 0;
    }
    input {
      padding-right: 2.5rem;
    }
  }

}

.form-group-sm {
  label {
    @include font-size($font-size-xs);
    span {
      font-size: 0.625rem;
    }
  }

  .input-rounded {
    border-radius: 1rem;
    padding: $btn-padding-y-sm $btn-padding-x-sm;
  }

  .input-group-icon {
    > .icon {
      padding: 0 .5rem;
      &:before{
        width: 16px;
        height: 16px;
      }
    }

    &.input-group-icon-left {
      input {
        padding-left: 2rem;
      }
    }

    &.input-group-icon-right {
      input {
        padding-right: 2rem;
      }
    }
  }
  .valid-feedback,
  .invalid-feedback {
    &:before {
      width: 16px;
      height: 16px;
      top: calc(24px + 16px); //(height .invalid-feedback + haft of icon)+ (height of input/2)
    }
  }
  input {
    @extend .form-control-sm;
  }

  .custom-control {
    .custom-control-label {
      padding-top: 0.3rem;
    }
  }

}



.form-group-lg {
  label {
    @include font-size($font-size-base);
    span {
      font-size: $font-size-sm;
    }
  }
  .input-rounded {
      border-radius: 1.75rem;
      padding: $btn-padding-y-lg $btn-padding-x-lg;
    }

  .input-group-icon {
    > .icon {
      padding: 0 1rem;
    }

    &.input-group-icon-left {
      input {
        padding-left: 3.5rem;
      }
    }

    &.input-group-icon-right {
      input {
        padding-right: 3.5rem;
      }
    }
  }
  .valid-feedback,
  .invalid-feedback {
    &:before {
      top: calc(21px + 28px); //(height .invalid-feedback + haft of icon)+ (height of input/2)
    }
  }

  input {
    @extend .form-control-lg;
    
  }

  .custom-control {
    .custom-control-label {
      padding-top: 0.1rem;
    }
  }

}

.form-sm {
  @extend .form-group-sm;
}

.form-lg {
  @extend .form-group-lg;
}


// wrapper around input that needs inline text addon
.input-inline-addon {
  @extend .form-inline;
  // Allow folks to *not* use `.form-group`
  .form-control {
    display: inline-block;
    width: 160px;
    vertical-align: middle;
  }
  .input-inline-text {
    color: $gray-500;
    padding-left: 0.8125rem;
  }
}

// TO DO: Is this generic or specific to wizard forms
.form-action-group {
  margin: 2rem auto;
  ul {
    @extend .list-inline;
    display: flex;
    //justify-content: space-between;
    li {
      @extend .list-inline-item;
      &:not(:last-child) {
        margin-right: inherit;
      }

      &:last-child {
        margin-left: auto;
      }
    }
  }
}

// Input Groups
//
.input-group-date {
  .input-group-append {
    cursor: pointer;
  }
}



.has-clear {
  .form-control {
    padding-right: 2.5rem;
  }
  .btn-clear {
    @include button-reset();
    pointer-events: inherit;
    cursor: pointer;
    @include font-size(1.5rem);
    z-index: 10;
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
    display: flex;
    color: $gray-900;
    margin-right: .3rem;
    padding: 0;
    border-radius: 50%;
  }
}


.input-group-append {
  svg {
    width: 16px;
    height: 16px;
  }
  .btn {
    display: flex;
    align-items: center;
    padding: $input-padding-y $input-padding-x;
    @include font-size($font-size-sm); // Match inputs
    font-weight: $font-weight-normal;
    line-height: $input-line-height;
    color: $input-group-addon-color;
    text-align: center;
    white-space: nowrap;
    background-color: $input-group-addon-bg;
    border: $input-border-width solid $input-group-addon-border-color;
    @include border-radius($input-border-radius);
  }
}

// Custom control indicators
//
// Build the custom controls out of pseudo-elements.
// Radios
//
// Tweak just a few things for radios.
.custom-control {
  margin-bottom: $custom-control-spacer-y;

  .custom-control-label {
    padding-top: 0.15rem;
    &::before {
      border: 1px solid $input-border-color;
    }
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::before {
      border-color: $custom-control-indicator-checked-bg;
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      border-color: $custom-control-indicator-checked-disabled-bg;
    }
    &:indeterminate ~ .custom-control-label::before {
      border-color: $custom-control-indicator-checked-disabled-bg;
    }
  }

}

.custom-control-input {
  position: absolute;
  z-index: -1; // Put the input behind the label so it doesn't overlay text
  opacity: 0;

  &:disabled {
    ~ .custom-control-label {
      &::before {
        border-color: $custom-control-indicator-disabled-bg;
      }
    }
  }
}

//Checkboxes
.custom-checkbox {
  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      top: -0.4rem;
      left: -2.45rem;
      width: 2.5rem;
      height: 2.5rem;
    }
  }
}
// Radios
//
// Tweak just a few things for radios.
.custom-radio {
  // We need to grow the checkbox a bit cuz it's too thin...
  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      //background-size: $custom-radio-indicator-icon-checked-bg-size;
    }
  }
}

//
// Custom checkboxes and radios themed as card
.custom-control-card {
  padding: 0;
  margin-bottom: 1.5rem;

  .custom-control-label {
    display: flex;
    flex-direction: column;
    flex: 1;
    justify-content: center;
    padding: 2rem;
    padding-left: 5.3125rem;
    position: relative;
    border: 1px solid $gray-400;
    min-height: 8rem; // Make sur card has minimum height

    // Background-color and (when enabled) gradient
    &::before {
      top: calc(50% - (#{$custom-control-indicator-size}/2));
      left: 0;
      right: auto;
      margin-left: 2rem;
    }

    // Foreground (icon)
    &::after {
      top: calc(50% - (#{$custom-control-indicator-size}/2));
      left: 0;
      right: auto;
      margin-left: 2rem;
    }

    .card-label {
      @include card-heading();
    }

    .card-title {
      @include card-heading();
    }
  }

  .custom-control-input:disabled ~ .custom-control-label {
    .card-title, .card-label {
      color: $custom-control-label-disabled-color;
    }
  }
}

// switches
//
// Tweak a few things for switches
.custom-switch {
  padding-left: 0rem;

  .custom-control-label {
    position: relative;
    display: inline-block;
    min-width: 112px;
    cursor: pointer;
    font-weight: 500;
    text-align: left;
    padding: 0 0 0.5rem 44px;
    
    &::before, 
    &:after {
      content: "";
      position: absolute;
      margin: 0;
      outline: 0;
      top: 50%;
      -ms-transform: translate(0, -50%);
      -webkit-transform: translate(0, -50%);
      transform: translate(0, -50%);
      -webkit-transition: all 0.3s ease;
      transition: all 0.3s ease;
    }
    
    &:before {
      left: 1px;
      width: 34px;
      height: 14px;
      background-color: $neutral-stroke;
      border-radius: 8px;
    }
    
    &:after {
      left: 0;
      width: 20px;
      height: 20px;
      background-color: $white;
      border-radius: 50%;
      box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.14), 0 2px 2px 0 rgba(0, 0, 0, 0.098), 0 1px 5px 0 rgba(0, 0, 0, 0.084);
    }
  }

  .custom-control-input {
    display: none;
    
    &:checked {
      & + .custom-control-label {
         &::before {
          border-color: $neutral-stroke;
          background-color: $neutral-stroke;
        }
        &:after {
          background-color: $primary;
          -ms-transform: translate(80%, -50%);
          -webkit-transform: translate(80%, -50%);
          transform: translate(80%, -50%);
        }
      }
    }
    
    &:disabled {
      & + .custom-control-label {
        &:after {
          background-color: $neutral-underground-1;
        }
      }
    }

  }
}


//
// file drop container
.file-drop-container {
  border-radius: $input-border-radius;
  border: dashed 2px $gray-400;
  display: flex;
  padding: 2rem;
  flex-direction: column;
  align-items: center;

  .help-text {
    color: $input-color;
    margin-bottom: 1rem;
    text-align: center;
  }

  &.file-over{
    background: $gray-400;
  }
}

//
// Feedback form
.feedback-form-container {
  padding: 2rem;
  display: block;
  box-shadow: none;
  margin-bottom: 4rem;

  .feedback-form-header {
    h4 {
      display: block;
      margin-bottom: 0;
    }
  }

}


.feedback-form {
  textarea {
    -webkit-transform: translateZ(0px);
  }

  button {
    + button {
      margin-left: .5rem;
      &.btn-link {
        margin-left: 1rem;
      }
    }
  }
  .feedback-question {
    h4 {
      margin-bottom: 1.5rem;
    }
  }
  .feedback-question-label {
    @include font-size($font-size-lg);
    color: $headings-color;
    display: block;
    line-height: $line-height-sm;
    margin-bottom: 1.5rem;
  }

  .feedback-details-content,
  .feedback-details-display {
    display: none;
  }

  .notice {
    @include font-size($font-size-sm);
  }


}
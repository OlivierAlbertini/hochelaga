// @file icons.scss


// >> Begin demo code for atoms-icons
// - - - - - - - - - -  - - - - - -


@font-face {
  font-family: $vdm-icon-font-family;
  src: url('#{$vdm-icon-font-path}/vdm-font-icon.eot?v=#{$vdm-icon-font-version}');
  src: url('#{$vdm-icon-font-path}/vdm-font-icon.eot?v=#{$vdm-icon-font-version}') format('embedded-opentype'),
    url('#{$vdm-icon-font-path}/vdm-font-icon.woff2?v=#{$vdm-icon-font-version}') format('woff2'),
    url('#{$vdm-icon-font-path}/vdm-font-icon.woff?v=#{$vdm-icon-font-version}') format('woff'),
    url('#{$vdm-icon-font-path}/vdm-font-icon.ttf?v=#{$vdm-icon-font-version}') format('truetype');

  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: $vdm-icon-font-family;
  src: url('#{$vdm-icon-font-path}/vdm-font-icon.eot?v=#{$vdm-icon-font-version}');
  src: url('#{$vdm-icon-font-path}/vdm-font-icon.eot?v=#{$vdm-icon-font-version}') format('embedded-opentype'),
    url('#{$vdm-icon-font-path}/vdm-font-icon.woff2?v=#{$vdm-icon-font-version}') format('woff2'),
    url('#{$vdm-icon-font-path}/vdm-font-icon.woff?v=#{$vdm-icon-font-version}') format('woff'),
    url('#{$vdm-icon-font-path}/vdm-font-icon.ttf?v=#{$vdm-icon-font-version}') format('truetype');

  font-weight: normal;
  font-style: normal;
}

// //== Icons fonts vfi class, imported from "@villemontreal/font-icon
// $vfi-icon-font-path: $assets-font-path;
// $vfi-icon-font-family : 'vdm';
// @font-face {
//   font-family: $vfi-icon-font-family;
//   src: url('#{$vfi-icon-font-path}/vdm.eot?c81cd1b7c58db7a73be82e1052585cc0?#iefix') format("embedded-opentype"),
//     url('#{$vfi-icon-font-path}/vdm.woff2?c81cd1b7c58db7a73be82e1052585cc0') format("woff2"),
//     url('#{$vfi-icon-font-path}/vdm.woff?c81cd1b7c58db7a73be82e1052585cc0') format("woff"),
//     url('#{$vfi-icon-font-path}/vdm.ttf?c81cd1b7c58db7a73be82e1052585cc0') format("truetype"),
//     url('#{$vfi-icon-font-path}/vdm.svg?c81cd1b7c58db7a73be82e1052585cc0#vdm') format("svg");
// }


// test social icon font
// @font-face {
//   font-family: $social-icon-font-family;
//   src: url('#{$social-icon-font-path}/ic-social.eot?v=#{$social-icon-font-version}');
//   src: url('#{$social-icon-font-path}/ic-social.eot?v=#{$social-icon-font-version}') format('embedded-opentype'),
//     url('#{$social-icon-font-path}/ic-social.woff2?v=#{$social-icon-font-version}') format('woff2'),
//     url('#{$social-icon-font-path}/ic-social.woff?v=#{$social-icon-font-version}') format('woff'),
//     url('#{$social-icon-font-path}/ic-social.ttf?v=#{$social-icon-font-version}') format('truetype');

//   font-weight: normal;
//   font-style: normal;
// }
// fin test
// >> Begin custom inline vdm code
// - - - - - -
// @ see primary reference for this implementation : http://fontawesome.io/examples/
// @ TO-DO : implement more modifiers (scale,etc), fetching inspiration from the main fa stylesheet


// VDM ICONS, initial version with english key names
i,span {
  &.vdmi {
    display: inline-block;
    font: normal normal normal $font-size-base/1 $vdm-icon-font-family;
    font-size: inherit;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    // Individual symbol instances
    // @see variable $icons in variables.scss -- contains all characters
    // mapping & object names as in { document: "\E012"; }
    @each $name, $char in $icons {
      &.ic-#{$name} {
        &:before {
          content: $char;
        }
      }
    }

    

    // Scale modifiers
    &.ic-lg {
      font-size: 1.33333333em;
      line-height: 0.75em;
      vertical-align: -15%;
    }
    &.ic-2x {
      font-size: 2em;
    }
    &.ic-3x {
      font-size: 3em;
    }
    &.ic-4x {
      font-size: 4em;
    }
    &.ic-5x {
      font-size: 5em;
    }
    &.ic-6x {
      font-size: 6em;
    }
    &.ic-7x {
      font-size: 7em;
    }
    &.ic-8x {
      font-size: 8em;
    }

    // Fixed width
    &.ic-fw {
      width: 1.28571429em;
      text-align: center;
    }
  }
}

// Social media
ul {
  &.social-media-list {
    margin: 0;
    padding: 0;
    list-style-type: none;
    li {
      margin: 0;
      padding: 0 $vdm-icon-social-media-padding-right-lists 0 0;
      display: inline-block;
      &:last-of-type {
        margin: 0;
      }
      a {
        display: flex;
        align-items: center;
        color: $black;
        //line-height: $social-icon-font-size;
        //margin-left: $social-icon-font-size * 1.15;
        text-decoration: none;
        &:hover, 
        &:active {
          color: $black;
          //text-decoration: underline;
          cursor: pointer;
        }
        .vfi {
          &:before {
            font-size: 2em;
          }
          padding-right: .5rem;
        }
        .label {
          &:hover, 
          &:active {
            text-decoration: underline;
          }
        }
      }
    }
  }
}

// test social icon font
// Create a mixin with this bloc, loop over the $social-media-icons variable with map-get
// Mixin opportunity
a {
  position: relative;
  &.social-icon {
    //height: $vdm-icon-social-media-scale;
    //padding-left: $vdm-icon-social-media-scale + $vdm-icon-social-media-padding-right;
    //line-height: $vdm-icon-social-media-scale;
    display: inline-block;
    font-size: 1rem;
    color: $black;
    line-height: $social-icon-font-size;
    margin-left: $social-icon-font-size * 1.15;
    text-decoration: none;
    &:hover, 
    &:active {
      color: $black;
      text-decoration: underline;
      cursor: pointer;
      &:before {
        text-decoration: none;
      }
    }

    // Individual symbol instance styles
    // @see variable $social-media-icons in variables.scss -- contains all characters
    @each $name, $char in $social-media-icons {
      &.#{$name} {
        &:before {
          content: $char;
        }
      }
    }

    &.inverted {
      color: $white;
    }
    &:before {
      display: inline-block;
      font-size: $social-icon-font-size;
      font-family: $social-icon-font-family;
      position: absolute;
      left: -$social-icon-font-size * 1.15;
    }
    &.ic-only {
      margin-left: 0;
      overflow: visible;
      &:before {
        position: relative;
        left: auto;
      }
    }
  }
}
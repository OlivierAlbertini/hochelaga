// @file mixins.scss

/**
 * - - - - - - - - - -
 * == Typography
 * - - - - - - - - - -
 */

// @arg $level - integrer [1-6]
// @arg $weight - string ['light','regular','bold']
 @mixin header($level: 1, $weight: 'regular') {

  font-family: $vdm-font-family;
  font-size: $vdm-font-size-base * 4.1875;        // 67px
  line-height: $vdm-line-height-base * 5.6250;    // 92px
  font-weight: $vdm-font-weight-regular;
  display: block;

  // WTF is this, should we, really, reset all headers vertical margins?
  // margin-top: 0;
  // margin-bottom: 0;

  @if $level == 2 {
    font-weight: $vdm-font-weight-light;
    font-size: $vdm-font-size-base * 3.125;       // 50px
    line-height: $vdm-line-height-base * 3.2857;  // 69px

  } @else if $level == 3 {
    font-size: $vdm-font-size-base * 2.3125;      // 37px
    line-height: $vdm-line-height-base * 2.3809;  // 50px

  } @else if $level == 4 {
      font-size: $vdm-font-size-base * 1.750;       // 28px
      line-height: $vdm-line-height-base * 1.8095;  // 38px
      font-weight: $vdm-font-weight-regular;

      @if $weight == 'bold' {
        font-weight: $vdm-font-weight-bold;
      }
  } @else if $level == 5 {
    font-size: $vdm-font-size-base * 1.3125;      // 21px
    line-height: $vdm-line-height-base * 1.3333;  // 28px

  } @else if $level == 6 {
    font-size: $vdm-font-size-base * 1.0000;      // 16px
    line-height: $vdm-line-height-base * 1.0000;  // 26px
  }
 }




 /**
  * Vdm fonticon mixin
  * Reference : http://jaydenseric.com/blog/fun-with-sass-and-font-icons
  *
  * @arg $position [string] - [before, after, both]
  * @arg $icon [string or false] - a member of the $icons variable
  * @arg $styles [boolean] - whther the extra styles rules shoudl be applied or just the content attribute
  *
  * Usage 
  * <a href="#" class="some-class">Some text</a>
  *
  * .some-class {
  *     @include icon(before, rosette);
  * }
  *
  *
  */


// Generate all .ic-icon classnames : 
[class^="ic-"]:before,
[class*=" ic-"]:before {
    font-weight: normal;
    font-style: normal;
    font-family: $vdm-icon-font-family;
}

// @see variable $icons in variables.scss -- contains all characters
// mapping & object names as in   document: "\E012";
@each $name, $char in $icons {
    .ic-#{$name} {
        content: $char;
    }
}


@mixin icon($position: before, $icon: false, $styles: true) {
    @if $position == both {
        $position: 'before, &:after';
    }
    // Either a :before or :after pseudo-element, or both, defaulting to :before
    &:#{$position} {

        @if $icon {
            // A particular icon has been specified
            content: "#{map-get($icons, $icon)}";
        }

        @if $styles {
            font-weight: normal;
            font-style: normal;
            font-family: $vdm-icon-font-family;
            text-decoration: none;
            display: inline-block;
            text-rendering: auto;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        @content;
    }
}



/**
 * - - - - - - - - - -
 * == Collector blocks : teasers and cards
 * - - - - - - - - - -
 */

 // Set all base teaser properties
 // To be applied to top-level hyperlink
@mixin teaser-base() {
  position: relative;
  display: flex;
  flex-direction: column;
  cursor: pointer;
  line-height: $vdm-line-height-base;

  @include teaser-icons();
  @include teaser-scheme();
  @include teaser-padding();


  // Base fixture behaviours
  >img {
    @extend .img-fluid;
  }

  title { 
      @include header(4);
      margin-bottom: 1em; 
      &.arrow-link {
          line-height: 1.7em;
      }
      &:last-child {
          margin-bottom: 0;
      }
  }
  .content {
      margin-bottom: 1.3em;
      flex: 1;
      &:last-child {
          margin-bottom: 0;
      }
  }
  .footer {
      margin-bottom: 0;  
      margin-top: auto;
  }

}


// Set all common properties for icons, for the :after & :before pseudo-elements
 // To be applied to top-level hyperlink
@mixin teaser-icons() {
  &:after, &:before {
    font-size: 3.6rem;
    width: 3.6rem;
    height: 3.6rem;
    line-height: 3.6rem;
    text-decoration: none;
    color: $vdm-brand;
  }
}

// Sets icon position
// To be involed from the teaser-padding : after & before mixin
// $where [none, left, right, top]
// $case [none, arrow-block]
@mixin teaser-icon-position($where: none, $case: none) {
  
  // Provide icon classes, invoke icon mixin, using :before or :after
  @each $name, $char in $icons {
      &.ic-#{$name} {
        @if $where == left {
          @include icon(before, $name);
        }
        @if $where == right {
          @include icon(after, $name);
        }
          
      }
  }

  &:before, &:after {
    position: absolute;
    
    @if $where == top {

    }
  }

  @if $where == left {
    &:before {
      left: 3rem;
      top: calc(50% - 1.7rem);
    }
  }
  @if $where == right {
    &:after {
      top: calc(50% - 1.7rem);
      left: calc(100% - 7rem);
    }
  }

  @if $case == arrow-block {
    &:after {
      left: calc(100% - 4.5rem);
    }
  }

}

// $icon [none,right,left]
// $image [none,right,left]
// $case [none, compact,  identifier, green-title, etc]
// Include the beakpoint declarations into this system
 // To be applied to top-level hyperlink 
 // Another solution will have to be applied for the inner warpper, maybe?
 @mixin teaser-padding($icon: none, $image: none, $case: none) {
  
  padding: 2.3rem 2.3rem 2.3rem 2.3rem;
  
  @if $icon == left {

    padding-left: 7rem;
    @include teaser-icon-position(left);

  } @else if $icon == right {

    padding-right: 7rem;
    @include teaser-icon-position(right);

  }

  @if($case = compact) {

  }

}


 // Color schemes, to be applied to top-level hyperlink
@mixin teaser-scheme() {
  @debug "In teaser-scheme()";
  background: $vdm-grey-light;
  border: none;
  text-decoration: none;
  color: $vdm-text;

  &:hover, &:active {
    background: $vdm-brand;
    color: $vdm-white;
    > * {
      color: $vdm-white;
    }

    &:before, &:after {
      color: $vdm-white;
    }
  }
}

@mixin teaser-light-scheme() {
  background: $vdm-white;
  border: 1px solid $vdm-brand;
  @include teaser-scheme-hover();
}

@mixin teaser-white-scheme() {
  background: $vdm-white;
  border: none;
  @include teaser-scheme-hover();
}

@mixin teaser-scheme-hover() {
  &:hover, &:active {
    background: $vdm-brand;
    color: $vdm-white;
    > * {
      color: $vdm-white;
    }

    &:before, &:after {
      color: $vdm-white;
    }
  }
} 


// See footers with multiple tags for application, work on children
@mixin teaser-inline-items() {

}



/**
 * - - - - - - - - - -
 * == UI
 * - - - - - - - - - -
 */

//== Accents
// - - - - - - - - - -

@mixin drop-shadow(
    $dist-top: 0,
    $dist-right: 5px,
    $dist-bottom: 11px,
    $dist-left: 0 ,
    $color-r: 0,
    $color-g: 0,
    $color-b: 0,
    $opacity: 0.27
  ) {

    box-shadow: $dist-top $dist-right $dist-bottom $dist-left rgba(
      $color-r,
      $color-g,
      $color-b,
      $opacity
    );

    // $forms-ds-color-r: 0;
    // $forms-ds-color-g: 0;
    // $forms-ds-color-b: 0;
    // $forms-ds-opacity: 0.27;
    // $forms-ds-right-size: 5px;
    // $forms-ds-bottom-size: 11px;
}


/**
 * - - - - - - - - - -
 * == Forms
 * - - - - - - - - - -
 */

//== Buttons
// - - - - - - - - - -
@mixin button-alter($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:focus,
  &.focus {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 25%);
  }
  &:hover {
    color: $color;
    background-color: darken($background, 10%);
        border-color: darken($border, 12%);
  }
}

// Button sizes
@mixin button-alter-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}

/**
 * - - - - - - - - - -
 * == DEBUG
 * - - - - - - - - - -
 */

//== Debugging mixins

// - - - - - - - - - -
// Debug : quickly add border to element
@mixin db-border($color: $vdm-grey) {
  border: 1px solid $color;
}
